/**
@file

Copyright John Reid 2006

*/

#include "bio/defs.h"
#include "bio/bio_max_chain.h"

#include <boost/test/unit_test.hpp>
#include <boost/test/parameterized_test.hpp>
#include <boost/test/floating_point_comparison.hpp>
#include <boost/assign/list_of.hpp>
using namespace boost;
using namespace boost::assign;
using boost::unit_test::test_suite;
using namespace std;
USING_BIO_NS;


//BOOST_TEST_DONT_PRINT_LOG_VALUE( max_chain_test::lcs::string )

//#define VERBOSE_CHECKING

namespace check_adjust_phylo_ns {

typedef std::vector< seq_t > seq_vec;
typedef boost::tuple<
	std::string, 
	seq_vec
> test_case;
typedef std::vector< test_case > test_case_vec;

extern test_case_vec test_cases;


void
check_adjust_phylo( const test_case & tc )
{
	cout << "******* check_adjust_phylo(): " << tc.get< 0 >() << "\n";

	match_results_array hits;
	score_phylo_sequences(
		tc.get< 1 >(),
		BiobasePssmFilter(),
		BAYESIAN_SCORE_ALGORITHM,
		0.03f,
		hits);
}


test_case_vec test_cases = tuple_list_of< std::string, std::vector< std::string > >
	(
		std::string( "MSX Enhancer D" ),
		list_of< std::string >
			( "GTACAGCGGTGGGCCGAGACGGGGTGGAGGACTTGGGTCCGGGCCCCTGGAGCCTTAGGGTCTGCCTGACATCTCCAGGCTTAAATAACCGTGCGCCTTTGTTATTCGTAGGCAGCAAAGTGGTTCGTTACGCCTGATTGGTCTAATTGCTTTGAAATGAGATATATTATCTATAATTATAGAGTCCTGGTAGGAGCCGGCAGGCCTCCGCTTTCATCTTCCCCAAGTGCGCCCTCAAGTCCCGATCGCATTAATTTGCGCCATTTGAAGAGGGAGCTCCCTCTTCCGCGGATACTGGCCCCTCACCCTCAACCCCCACGAATTTAAAGACACAAGAAAGCCCAG" )
			( "TACCGCGGTGGGCCGAGACCGGGTGGAGGACTTTGGTCCAGGCCCTTGGAGCCTCAGGGTCTGCCTGACATCTCCAGGCTTAAATAACCGTGCGCCTTTGTTATTCGTAGGCAGCAAAGTGGTTCGTTACGCCTGATTGGTCTAATTGCTTTGAAATGAGATATATTATCTATAATTATAGAGTCCTGGTAGGAGCCGGCAGGCCTCCGCTTTCATCTTCCCCAAGTGCGCCCTCAAGTCCCGATCGCATTAATTTGCGCCATTTGAAGAGGGAGCTCCTTCTTCCGCGGATCCTGGCCCCTCACCCCTCCCACCCCCCACGAATTTAAAGACACAAGAAAGCCC" )
			( "AGAATGGAAGACGTTTGGTCGACCCTGGAGCCTCGGGGTCTGCCTGACATCTCCGGGCTTAAATAACCGTGCGCCTTTGTTATTCGTCGGCAGCAAAGTGGTTCGTTACGCCTGATTGGTCTAATTGCTTTGAAATGGGATATATTATCTATAATTATAGAGCTCTAGGAGAGCCGGCCGGCCTCTCCTTTCATCTTCCCAAGTGCACCCTCACG" )
			( "GGAAGACGTTTGGTCGACCCTGGAGCCTCGGGGTCTGCCTGACATCTCCGGGCTTAAATAACCGTGCGCCTTTGTTATTCGTCAGCAGCAAAGTGGTTCGTTACGCCTGATTGGTCTAATTGCTTTGAAATGGGATATATTATCTATAATTATAGAGCTCTAGGAGAGCCGGCCGGCCTCTCCTTTCATCTTCCCAAGTGCACCCTCACG" )
			( "GTTTGGTCGGCCCCTGGAGCCTCGGGGTCTGCCTGACATCTCTGGGCTTAAATAACCGTGCGCCTTTGTTATTCATCGGCAGCAAAGTGGTTCGTTACGCCTGATTGGTCTAATTGCTTTGAAATGGGATATATTATCTATAATTATAGAGCTCTAGGAGGAGCCGGCCGGCCTCCGCTTTCATCTTCCCCAAGTGCACCCTCATGTCGCGATCACATTAATTTGGGCCATTTGAAAGGGGGGCCCACTC" )
			( "CTGGGGTGGGCCGAGCCAGGATGGAAGACGTTGGGTCGGCCCCCGGAGCCTCGGGGTCTGCCTGACATCTCCAGGCTTAAATAACCGTGCGCCTTTGTTATTCGTCGGCAGCAAAGTGGTTCGTTACGCCTGATTGGTCTAATTGCTTTGAAATGGGATATATTATCTATAATTATAGAGCTCTAGGAGGAGCCGGCCGGCCTCCGCTTTCATCTTCCCCGAGTGCACCCTCATGTCGCGATCACATTAATTTGGGCCATTTGAAAGGGGGCCCCCTCTCTCCCC" )
			( "GCCAGGAGATATTGCTTTCGGACTGAGCCCCCGCAGCCCCGGGGTCTGCTTGACATCTTGAAGCTTAAATAACCGTAAGGCATTGTTACTGGTTGGCAGCAAAGTGGTTCGTTACGCCTGATTGGGCTAATTGCTTTGAAATAGGATATATTATCTATAATTATGGAGATCTAGGAGGAGACGGCCAGCCTCCGCTTTCATCTTTTCCAAGTGCATCATAATGTCGCGATCAAATTAATTTGGGCTATTTGAAATAGTGCCTCTCTTCATCCCCTCCCCCGCTCCCACTCTACCCCAAGC" )
			( "AGTTCCCTCTCGGGCAAAGCAGAGAGTCTCGAAGTCTGCTTGACATCTTGAAGCTTAAATAACCGTAAGGCATTGTTACTCCCTGGCAGCAAAGTGCCTCGTTACGCCTGATTGAGCTAATTGCTTTGAAATAGGATATATTATCTATAATTATAGAGATCTTGGAGGAGACGGGTAGCCTTTTCTTTCATCTTTTTCAAGTGCATCATAATGTCGCGATCAAATTAATTTGGGCCACTTGAAATAGTGCTTTCCTTTCAGCTCCGCTCTCGAGCCTCGAAGGAG" )
			( "GAGGGCGACACTGTGGCGTTTAGGGGCTTAAATAACCGTGAGGCATTGAGCGGCTCTTTACGCCTGATTGCGCTAATTGCTTTGAAATAGGAGACATTATCAGTAATGATTCCCGCGCCGCCTTTCATCTCCACCGAGAGCATCATCATG" )
			( "GAGGCGGCTGTGACGCAACTACCCCGCAGGTTTCGTCACTTATTGCAACAAAGTGCAGCGATCCGCCCGATTGCGCTAATTGCTTTGAAATAGGATACATTATGTATAATTTGGACGGTTTGAGTCGGACCCGAGGCTGTTGTCTTTTATCCCTCTGACTCTTCCAATAGAAGAA" )
			( "GCCCCCGTGACGCACCGACCCCGCGGGCACCGTCACTTATGGCAACAAAGCGCTGCTTTCCGCCTGATTGCGCTAATTGCTTTGAAATTAGATACATTATGTATCATTTGCAAAGTTTGAGCTTTGACAATAAAACCAGCCTTTCCAAATGTTATCCACA" )

	)
	;



} //namespace check_adjust_phylo_ns

void
register_adjust_phylo_tests( boost::unit_test::test_suite * test )
{
	using namespace check_adjust_phylo_ns;

	test->add( BOOST_PARAM_TEST_CASE( &check_adjust_phylo, test_cases.begin(), test_cases.end() ) );
}

