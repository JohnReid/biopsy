/* Generated/kegg_wsdl.h
   Generated by wsdl2h 1.2.7 from http://soap.genome.jp/KEGG.wsdl and typemap.dat
   2006-04-27 13:54:16 GMT
   Copyright (C) 2001-2005 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control schema namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * SOAP/KEGG                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "SOAP/KEGG"

*/

//gsoap ns1   schema namespace:	SOAP/KEGG
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Built-in attribute "SOAP-ENC:arrayType".
typedef std::string _SOAP_ENC__arrayType;


//  Forward declaration of class ArrayOfint.
class ArrayOfint;

//  Forward declaration of class ArrayOfstring.
class ArrayOfstring;

//  Forward declaration of class ns1__SSDBRelation.
class ns1__SSDBRelation;

//  Forward declaration of class ArrayOfSSDBRelation.
class ArrayOfSSDBRelation;

//  Forward declaration of class ns1__MotifResult.
class ns1__MotifResult;

//  Forward declaration of class ArrayOfMotifResult.
class ArrayOfMotifResult;

//  Forward declaration of class ns1__Definition.
class ns1__Definition;

//  Forward declaration of class ArrayOfDefinition.
class ArrayOfDefinition;

//  Forward declaration of class ns1__LinkDBRelation.
class ns1__LinkDBRelation;

//  Forward declaration of class ArrayOfLinkDBRelation.
class ArrayOfLinkDBRelation;

//  Forward declaration of class ns1__PathwayElement.
class ns1__PathwayElement;

//  Forward declaration of class ArrayOfPathwayElement.
class ArrayOfPathwayElement;

//  Forward declaration of class ns1__PathwayElementRelation.
class ns1__PathwayElementRelation;

//  Forward declaration of class ArrayOfPathwayElementRelation.
class ArrayOfPathwayElementRelation;

//  Forward declaration of class ns1__Subtype.
class ns1__Subtype;

//  Forward declaration of class ArrayOfSubtype.
class ArrayOfSubtype;

/// "SOAP/KEGG":SSDBRelation is a complexType.
class ns1__SSDBRelation
{ public:
/// Element genes_id1 of type xs:string.
    std::string                          genes_USCOREid1                1;	///< Required element.
/// Element genes_id2 of type xs:string.
    std::string                          genes_USCOREid2                1;	///< Required element.
/// Element sw_score of type xs:int.
    int                                  sw_USCOREscore                 1;	///< Required element.
/// Element bit_score of type xs:float.
    float                                bit_USCOREscore                1;	///< Required element.
/// Element identity of type xs:float.
    float                                identity                       1;	///< Required element.
/// Element overlap of type xs:int.
    int                                  overlap                        1;	///< Required element.
/// Element start_position1 of type xs:int.
    int                                  start_USCOREposition1          1;	///< Required element.
/// Element end_position1 of type xs:int.
    int                                  end_USCOREposition1            1;	///< Required element.
/// Element start_position2 of type xs:int.
    int                                  start_USCOREposition2          1;	///< Required element.
/// Element end_position2 of type xs:int.
    int                                  end_USCOREposition2            1;	///< Required element.
/// Element best_flag_1to2 of type xs:boolean.
    bool                                 best_USCOREflag_USCORE1to2     1;	///< Required element.
/// Element best_flag_2to1 of type xs:boolean.
    bool                                 best_USCOREflag_USCORE2to1     1;	///< Required element.
/// Element definition1 of type xs:string.
    std::string                          definition1                    1;	///< Required element.
/// Element definition2 of type xs:string.
    std::string                          definition2                    1;	///< Required element.
/// Element length1 of type xs:int.
    int                                  length1                        1;	///< Required element.
/// Element length2 of type xs:int.
    int                                  length2                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":MotifResult is a complexType.
class ns1__MotifResult
{ public:
/// Element motif_id of type xs:string.
    std::string                          motif_USCOREid                 1;	///< Required element.
/// Element definition of type xs:string.
    std::string                          definition                     1;	///< Required element.
/// Element genes_id of type xs:string.
    std::string                          genes_USCOREid                 1;	///< Required element.
/// Element start_position of type xs:int.
    int                                  start_USCOREposition           1;	///< Required element.
/// Element end_position of type xs:int.
    int                                  end_USCOREposition             1;	///< Required element.
/// Element score of type xs:float.
    float                                score                          1;	///< Required element.
/// Element evalue of type xs:double.
    double                               evalue                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":Definition is a complexType.
class ns1__Definition
{ public:
/// Element entry_id of type xs:string.
    std::string                          entry_USCOREid                 1;	///< Required element.
/// Element definition of type xs:string.
    std::string                          definition                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":LinkDBRelation is a complexType.
class ns1__LinkDBRelation
{ public:
/// Element entry_id1 of type xs:string.
    std::string                          entry_USCOREid1                1;	///< Required element.
/// Element entry_id2 of type xs:string.
    std::string                          entry_USCOREid2                1;	///< Required element.
/// Element type of type xs:string.
    std::string                          type                           1;	///< Required element.
/// Element path of type xs:string.
    std::string                          path                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":PathwayElement is a complexType.
class ns1__PathwayElement
{ public:
/// Element element_id of type xs:int.
    int                                  element_USCOREid               1;	///< Required element.
/// Element type of type xs:string.
    std::string                          type                           1;	///< Required element.
/// Element names of type "SOAP/KEGG":ArrayOfstring.
    ArrayOfstring*                       names                          1;	///< Required element.
/// Element components of type "SOAP/KEGG":ArrayOfint.
    ArrayOfint*                          components                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":PathwayElementRelation is a complexType.
class ns1__PathwayElementRelation
{ public:
/// Element element_id1 of type xs:int.
    int                                  element_USCOREid1              1;	///< Required element.
/// Element element_id2 of type xs:int.
    int                                  element_USCOREid2              1;	///< Required element.
/// Element type of type xs:string.
    std::string                          type                           1;	///< Required element.
/// Element name of type xs:string.
    std::string                          name                           1;	///< Required element.
/// Element subtypes of type "SOAP/KEGG":ArrayOfSubtype.
    ArrayOfSubtype*                      subtypes                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":Subtype is a complexType.
class ns1__Subtype
{ public:
/// Element relation of type xs:string.
    std::string                          relation                       1;	///< Required element.
/// Element element_id of type xs:int.
    int                                  element_USCOREid               1;	///< Required element.
/// Element type of type xs:string.
    std::string                          type                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":ArrayOfint is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:int
class ArrayOfint
{ public:
/// Pointer to array of int.
    int                                 *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":ArrayOfstring is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:string
class ArrayOfstring
{ public:
/// Pointer to array of std::string*.
    std::string*                        *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":ArrayOfSSDBRelation is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "SOAP/KEGG":SSDBRelation
class ArrayOfSSDBRelation
{ public:
/// Pointer to array of ns1__SSDBRelation*.
    ns1__SSDBRelation*                  *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":ArrayOfMotifResult is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "SOAP/KEGG":MotifResult
class ArrayOfMotifResult
{ public:
/// Pointer to array of ns1__MotifResult*.
    ns1__MotifResult*                   *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":ArrayOfDefinition is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "SOAP/KEGG":Definition
class ArrayOfDefinition
{ public:
/// Pointer to array of ns1__Definition*.
    ns1__Definition*                    *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":ArrayOfLinkDBRelation is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "SOAP/KEGG":LinkDBRelation
class ArrayOfLinkDBRelation
{ public:
/// Pointer to array of ns1__LinkDBRelation*.
    ns1__LinkDBRelation*                *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":ArrayOfPathwayElement is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "SOAP/KEGG":PathwayElement
class ArrayOfPathwayElement
{ public:
/// Pointer to array of ns1__PathwayElement*.
    ns1__PathwayElement*                *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":ArrayOfPathwayElementRelation is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "SOAP/KEGG":PathwayElementRelation
class ArrayOfPathwayElementRelation
{ public:
/// Pointer to array of ns1__PathwayElementRelation*.
    ns1__PathwayElementRelation*        *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "SOAP/KEGG":ArrayOfSubtype is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "SOAP/KEGG":Subtype
class ArrayOfSubtype
{ public:
/// Pointer to array of ns1__Subtype*.
    ns1__Subtype*                       *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	KEGGBinding 
//gsoap ns1  service type:	KEGGPortType 
//gsoap ns1  service port:	http://soap.genome.jp/keggapi/request_v5.0.cgi 
//gsoap ns1  service namespace:	SOAP/KEGG 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage KEGG_v5.0 Definitions

@section KEGG_USCOREv5_x002e0_bindings Bindings
  - @ref KEGGBinding

*/

/**

@page KEGGBinding Binding "KEGGBinding"

@section KEGGBinding_operations Operations of Binding  "KEGGBinding"
  - @ref ns1__list_USCOREdatabases
  - @ref ns1__list_USCOREorganisms
  - @ref ns1__list_USCOREpathways
  - @ref ns1__list_USCOREko_USCOREclasses
  - @ref ns1__binfo
  - @ref ns1__bget
  - @ref ns1__bfind
  - @ref ns1__btit
  - @ref ns1__bconv
  - @ref ns1__get_USCORElinkdb_USCOREby_USCOREentry
  - @ref ns1__get_USCOREbest_USCOREneighbors_USCOREby_USCOREgene
  - @ref ns1__get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgene
  - @ref ns1__get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgene
  - @ref ns1__get_USCOREparalogs_USCOREby_USCOREgene
  - @ref ns1__get_USCOREmotifs_USCOREby_USCOREgene
  - @ref ns1__get_USCOREgenes_USCOREby_USCOREmotifs
  - @ref ns1__get_USCOREko_USCOREby_USCOREgene
  - @ref ns1__get_USCOREko_USCOREby_USCOREko_USCOREclass
  - @ref ns1__get_USCOREgenes_USCOREby_USCOREko
  - @ref ns1__get_USCOREgenes_USCOREby_USCOREko_USCOREclass
  - @ref ns1__get_USCOREoc_USCOREmembers_USCOREby_USCOREgene
  - @ref ns1__get_USCOREpc_USCOREmembers_USCOREby_USCOREgene
  - @ref ns1__get_USCOREelements_USCOREby_USCOREpathway
  - @ref ns1__get_USCOREelement_USCORErelations_USCOREby_USCOREpathway
  - @ref ns1__color_USCOREpathway_USCOREby_USCOREelements
  - @ref ns1__get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREelements
  - @ref ns1__mark_USCOREpathway_USCOREby_USCOREobjects
  - @ref ns1__color_USCOREpathway_USCOREby_USCOREobjects
  - @ref ns1__get_USCOREhtml_USCOREof_USCOREmarked_USCOREpathway_USCOREby_USCOREobjects
  - @ref ns1__get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREobjects
  - @ref ns1__get_USCOREgenes_USCOREby_USCOREpathway
  - @ref ns1__get_USCOREenzymes_USCOREby_USCOREpathway
  - @ref ns1__get_USCOREreactions_USCOREby_USCOREpathway
  - @ref ns1__get_USCOREpathways_USCOREby_USCOREgenes
  - @ref ns1__get_USCOREpathways_USCOREby_USCOREenzymes
  - @ref ns1__get_USCOREpathways_USCOREby_USCOREreactions
  - @ref ns1__get_USCORElinked_USCOREpathways
  - @ref ns1__get_USCOREgenes_USCOREby_USCOREenzyme
  - @ref ns1__get_USCOREenzymes_USCOREby_USCOREgene
  - @ref ns1__get_USCOREenzymes_USCOREby_USCOREreaction
  - @ref ns1__get_USCOREreactions_USCOREby_USCOREenzyme
  - @ref ns1__get_USCOREgenes_USCOREby_USCOREorganism
  - @ref ns1__get_USCOREnumber_USCOREof_USCOREgenes_USCOREby_USCOREorganism
  - @ref ns1__get_USCOREreactions_USCOREby_USCOREglycan
  - @ref ns1__get_USCOREreactions_USCOREby_USCOREcompound
  - @ref ns1__get_USCOREenzymes_USCOREby_USCOREglycan
  - @ref ns1__get_USCOREenzymes_USCOREby_USCOREcompound
  - @ref ns1__get_USCOREpathways_USCOREby_USCOREcompounds
  - @ref ns1__get_USCOREpathways_USCOREby_USCOREglycans
  - @ref ns1__get_USCOREcompounds_USCOREby_USCOREpathway
  - @ref ns1__get_USCOREglycans_USCOREby_USCOREpathway
  - @ref ns1__get_USCOREcompounds_USCOREby_USCOREreaction
  - @ref ns1__get_USCOREglycans_USCOREby_USCOREreaction
  - @ref ns1__get_USCOREcompounds_USCOREby_USCOREenzyme
  - @ref ns1__get_USCOREglycans_USCOREby_USCOREenzyme
  - @ref ns1__convert_USCOREmol_USCOREto_USCOREkcf
  - @ref ns1__get_USCOREkos_USCOREby_USCOREpathway
  - @ref ns1__get_USCOREpathways_USCOREby_USCOREkos

@section KEGGBinding_ports Endpoints of Binding  "KEGGBinding"
  - http://soap.genome.jp/keggapi/request_v5.0.cgi

*/

/******************************************************************************\
 *                                                                            *
 * KEGGBinding                                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * ns1__list_USCOREdatabases                                                  *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__list_USCOREdatabasesResponse" of service binding "KEGGBinding" operation "ns1__list_USCOREdatabases"
struct ns1__list_USCOREdatabasesResponse
{
    ArrayOfDefinition*                  return_;
};

/// Operation "ns1__list_USCOREdatabases" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#list_databases"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__list_USCOREdatabases(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    // response parameters:
    struct ns1__list_USCOREdatabasesResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	list_USCOREdatabases rpc
//gsoap ns1  service method-encoding:	list_USCOREdatabases http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	list_USCOREdatabases SOAP/KEGG#list_databases
int ns1__list_USCOREdatabases(
    struct ns1__list_USCOREdatabasesResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__list_USCOREorganisms                                                  *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__list_USCOREorganismsResponse" of service binding "KEGGBinding" operation "ns1__list_USCOREorganisms"
struct ns1__list_USCOREorganismsResponse
{
    ArrayOfDefinition*                  return_;
};

/// Operation "ns1__list_USCOREorganisms" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#list_organisms"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__list_USCOREorganisms(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    // response parameters:
    struct ns1__list_USCOREorganismsResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	list_USCOREorganisms rpc
//gsoap ns1  service method-encoding:	list_USCOREorganisms http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	list_USCOREorganisms SOAP/KEGG#list_organisms
int ns1__list_USCOREorganisms(
    struct ns1__list_USCOREorganismsResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__list_USCOREpathways                                                   *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__list_USCOREpathwaysResponse" of service binding "KEGGBinding" operation "ns1__list_USCOREpathways"
struct ns1__list_USCOREpathwaysResponse
{
    ArrayOfDefinition*                  return_;
};

/// Operation "ns1__list_USCOREpathways" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#list_pathways"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__list_USCOREpathways(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         org,
    // response parameters:
    struct ns1__list_USCOREpathwaysResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	list_USCOREpathways rpc
//gsoap ns1  service method-encoding:	list_USCOREpathways http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	list_USCOREpathways SOAP/KEGG#list_pathways
int ns1__list_USCOREpathways(
    std::string                         org,	///< Request parameter
    struct ns1__list_USCOREpathwaysResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__list_USCOREko_USCOREclasses                                           *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__list_USCOREko_USCOREclassesResponse" of service binding "KEGGBinding" operation "ns1__list_USCOREko_USCOREclasses"
struct ns1__list_USCOREko_USCOREclassesResponse
{
    ArrayOfDefinition*                  return_;
};

/// Operation "ns1__list_USCOREko_USCOREclasses" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#list_ko_classes"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__list_USCOREko_USCOREclasses(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         class_USCOREid,
    // response parameters:
    struct ns1__list_USCOREko_USCOREclassesResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	list_USCOREko_USCOREclasses rpc
//gsoap ns1  service method-encoding:	list_USCOREko_USCOREclasses http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	list_USCOREko_USCOREclasses SOAP/KEGG#list_ko_classes
int ns1__list_USCOREko_USCOREclasses(
    std::string                         class_USCOREid,	///< Request parameter
    struct ns1__list_USCOREko_USCOREclassesResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__binfo                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__binfo" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#binfo"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__binfo(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         db,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	binfo rpc
//gsoap ns1  service method-encoding:	binfo http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	binfo SOAP/KEGG#binfo
int ns1__binfo(
    std::string                         db,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__bget                                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__bget" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#bget"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__bget(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         string,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	bget rpc
//gsoap ns1  service method-encoding:	bget http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	bget SOAP/KEGG#bget
int ns1__bget(
    std::string                         string,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__bfind                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__bfind" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#bfind"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__bfind(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         string,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	bfind rpc
//gsoap ns1  service method-encoding:	bfind http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	bfind SOAP/KEGG#bfind
int ns1__bfind(
    std::string                         string,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__btit                                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__btit" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#btit"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__btit(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         string,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	btit rpc
//gsoap ns1  service method-encoding:	btit http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	btit SOAP/KEGG#btit
int ns1__btit(
    std::string                         string,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__bconv                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__bconv" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#bconv"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__bconv(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         string,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	bconv rpc
//gsoap ns1  service method-encoding:	bconv http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	bconv SOAP/KEGG#bconv
int ns1__bconv(
    std::string                         string,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCORElinkdb_USCOREby_USCOREentry                                 *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCORElinkdb_USCOREby_USCOREentryResponse" of service binding "KEGGBinding" operation "ns1__get_USCORElinkdb_USCOREby_USCOREentry"
struct ns1__get_USCORElinkdb_USCOREby_USCOREentryResponse
{
    ArrayOfLinkDBRelation*              return_;
};

/// Operation "ns1__get_USCORElinkdb_USCOREby_USCOREentry" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_linkdb_by_entry"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCORElinkdb_USCOREby_USCOREentry(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         entry_USCOREid,
    std::string                         db,
    int                                 start,
    int                                 max_USCOREresults,
    // response parameters:
    struct ns1__get_USCORElinkdb_USCOREby_USCOREentryResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCORElinkdb_USCOREby_USCOREentry rpc
//gsoap ns1  service method-encoding:	get_USCORElinkdb_USCOREby_USCOREentry http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCORElinkdb_USCOREby_USCOREentry SOAP/KEGG#get_linkdb_by_entry
int ns1__get_USCORElinkdb_USCOREby_USCOREentry(
    std::string                         entry_USCOREid,	///< Request parameter
    std::string                         db,	///< Request parameter
    int                                 start,	///< Request parameter
    int                                 max_USCOREresults,	///< Request parameter
    struct ns1__get_USCORElinkdb_USCOREby_USCOREentryResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREbest_USCOREneighbors_USCOREby_USCOREgene                    *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREbest_USCOREneighbors_USCOREby_USCOREgene"
struct ns1__get_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse
{
    ArrayOfSSDBRelation*                return_;
};

/// Operation "ns1__get_USCOREbest_USCOREneighbors_USCOREby_USCOREgene" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_best_neighbors_by_gene"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREbest_USCOREneighbors_USCOREby_USCOREgene(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         genes_USCOREid,
    int                                 start,
    int                                 max_USCOREresults,
    // response parameters:
    struct ns1__get_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREbest_USCOREneighbors_USCOREby_USCOREgene rpc
//gsoap ns1  service method-encoding:	get_USCOREbest_USCOREneighbors_USCOREby_USCOREgene http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREbest_USCOREneighbors_USCOREby_USCOREgene SOAP/KEGG#get_best_neighbors_by_gene
int ns1__get_USCOREbest_USCOREneighbors_USCOREby_USCOREgene(
    std::string                         genes_USCOREid,	///< Request parameter
    int                                 start,	///< Request parameter
    int                                 max_USCOREresults,	///< Request parameter
    struct ns1__get_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgene         *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgene"
struct ns1__get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse
{
    ArrayOfSSDBRelation*                return_;
};

/// Operation "ns1__get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgene" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_best_best_neighbors_by_gene"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgene(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         genes_USCOREid,
    int                                 start,
    int                                 max_USCOREresults,
    // response parameters:
    struct ns1__get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgene rpc
//gsoap ns1  service method-encoding:	get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgene http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgene SOAP/KEGG#get_best_best_neighbors_by_gene
int ns1__get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgene(
    std::string                         genes_USCOREid,	///< Request parameter
    int                                 start,	///< Request parameter
    int                                 max_USCOREresults,	///< Request parameter
    struct ns1__get_USCOREbest_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgene      *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgene"
struct ns1__get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse
{
    ArrayOfSSDBRelation*                return_;
};

/// Operation "ns1__get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgene" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_reverse_best_neighbors_by_gene"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgene(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         genes_USCOREid,
    int                                 start,
    int                                 max_USCOREresults,
    // response parameters:
    struct ns1__get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgene rpc
//gsoap ns1  service method-encoding:	get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgene http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgene SOAP/KEGG#get_reverse_best_neighbors_by_gene
int ns1__get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgene(
    std::string                         genes_USCOREid,	///< Request parameter
    int                                 start,	///< Request parameter
    int                                 max_USCOREresults,	///< Request parameter
    struct ns1__get_USCOREreverse_USCOREbest_USCOREneighbors_USCOREby_USCOREgeneResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREparalogs_USCOREby_USCOREgene                                *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREparalogs_USCOREby_USCOREgeneResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREparalogs_USCOREby_USCOREgene"
struct ns1__get_USCOREparalogs_USCOREby_USCOREgeneResponse
{
    ArrayOfSSDBRelation*                return_;
};

/// Operation "ns1__get_USCOREparalogs_USCOREby_USCOREgene" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_paralogs_by_gene"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREparalogs_USCOREby_USCOREgene(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         genes_USCOREid,
    int                                 start,
    int                                 max_USCOREresults,
    // response parameters:
    struct ns1__get_USCOREparalogs_USCOREby_USCOREgeneResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREparalogs_USCOREby_USCOREgene rpc
//gsoap ns1  service method-encoding:	get_USCOREparalogs_USCOREby_USCOREgene http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREparalogs_USCOREby_USCOREgene SOAP/KEGG#get_paralogs_by_gene
int ns1__get_USCOREparalogs_USCOREby_USCOREgene(
    std::string                         genes_USCOREid,	///< Request parameter
    int                                 start,	///< Request parameter
    int                                 max_USCOREresults,	///< Request parameter
    struct ns1__get_USCOREparalogs_USCOREby_USCOREgeneResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREmotifs_USCOREby_USCOREgene                                  *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREmotifs_USCOREby_USCOREgeneResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREmotifs_USCOREby_USCOREgene"
struct ns1__get_USCOREmotifs_USCOREby_USCOREgeneResponse
{
    ArrayOfMotifResult*                 return_;
};

/// Operation "ns1__get_USCOREmotifs_USCOREby_USCOREgene" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_motifs_by_gene"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREmotifs_USCOREby_USCOREgene(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         genes_USCOREid,
    std::string                         db,
    // response parameters:
    struct ns1__get_USCOREmotifs_USCOREby_USCOREgeneResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREmotifs_USCOREby_USCOREgene rpc
//gsoap ns1  service method-encoding:	get_USCOREmotifs_USCOREby_USCOREgene http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREmotifs_USCOREby_USCOREgene SOAP/KEGG#get_motifs_by_gene
int ns1__get_USCOREmotifs_USCOREby_USCOREgene(
    std::string                         genes_USCOREid,	///< Request parameter
    std::string                         db,	///< Request parameter
    struct ns1__get_USCOREmotifs_USCOREby_USCOREgeneResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREgenes_USCOREby_USCOREmotifs                                 *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREgenes_USCOREby_USCOREmotifsResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREgenes_USCOREby_USCOREmotifs"
struct ns1__get_USCOREgenes_USCOREby_USCOREmotifsResponse
{
    ArrayOfDefinition*                  return_;
};

/// Operation "ns1__get_USCOREgenes_USCOREby_USCOREmotifs" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_genes_by_motifs"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREgenes_USCOREby_USCOREmotifs(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ArrayOfstring*                      motif_USCOREid_USCORElist,
    int                                 start,
    int                                 max_USCOREresults,
    // response parameters:
    struct ns1__get_USCOREgenes_USCOREby_USCOREmotifsResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREgenes_USCOREby_USCOREmotifs rpc
//gsoap ns1  service method-encoding:	get_USCOREgenes_USCOREby_USCOREmotifs http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREgenes_USCOREby_USCOREmotifs SOAP/KEGG#get_genes_by_motifs
int ns1__get_USCOREgenes_USCOREby_USCOREmotifs(
    ArrayOfstring*                      motif_USCOREid_USCORElist,	///< Request parameter
    int                                 start,	///< Request parameter
    int                                 max_USCOREresults,	///< Request parameter
    struct ns1__get_USCOREgenes_USCOREby_USCOREmotifsResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREko_USCOREby_USCOREgene                                      *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREko_USCOREby_USCOREgeneResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREko_USCOREby_USCOREgene"
struct ns1__get_USCOREko_USCOREby_USCOREgeneResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREko_USCOREby_USCOREgene" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_ko_by_gene"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREko_USCOREby_USCOREgene(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         genes_USCOREid,
    // response parameters:
    struct ns1__get_USCOREko_USCOREby_USCOREgeneResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREko_USCOREby_USCOREgene rpc
//gsoap ns1  service method-encoding:	get_USCOREko_USCOREby_USCOREgene http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREko_USCOREby_USCOREgene SOAP/KEGG#get_ko_by_gene
int ns1__get_USCOREko_USCOREby_USCOREgene(
    std::string                         genes_USCOREid,	///< Request parameter
    struct ns1__get_USCOREko_USCOREby_USCOREgeneResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREko_USCOREby_USCOREko_USCOREclass                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREko_USCOREby_USCOREko_USCOREclassResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREko_USCOREby_USCOREko_USCOREclass"
struct ns1__get_USCOREko_USCOREby_USCOREko_USCOREclassResponse
{
    ArrayOfDefinition*                  return_;
};

/// Operation "ns1__get_USCOREko_USCOREby_USCOREko_USCOREclass" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_ko_by_ko_class"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREko_USCOREby_USCOREko_USCOREclass(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         class_USCOREid,
    // response parameters:
    struct ns1__get_USCOREko_USCOREby_USCOREko_USCOREclassResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREko_USCOREby_USCOREko_USCOREclass rpc
//gsoap ns1  service method-encoding:	get_USCOREko_USCOREby_USCOREko_USCOREclass http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREko_USCOREby_USCOREko_USCOREclass SOAP/KEGG#get_ko_by_ko_class
int ns1__get_USCOREko_USCOREby_USCOREko_USCOREclass(
    std::string                         class_USCOREid,	///< Request parameter
    struct ns1__get_USCOREko_USCOREby_USCOREko_USCOREclassResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREgenes_USCOREby_USCOREko                                     *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREgenes_USCOREby_USCOREkoResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREgenes_USCOREby_USCOREko"
struct ns1__get_USCOREgenes_USCOREby_USCOREkoResponse
{
    ArrayOfDefinition*                  return_;
};

/// Operation "ns1__get_USCOREgenes_USCOREby_USCOREko" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_genes_by_ko"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREgenes_USCOREby_USCOREko(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         ko_USCOREid,
    std::string                         org,
    // response parameters:
    struct ns1__get_USCOREgenes_USCOREby_USCOREkoResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREgenes_USCOREby_USCOREko rpc
//gsoap ns1  service method-encoding:	get_USCOREgenes_USCOREby_USCOREko http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREgenes_USCOREby_USCOREko SOAP/KEGG#get_genes_by_ko
int ns1__get_USCOREgenes_USCOREby_USCOREko(
    std::string                         ko_USCOREid,	///< Request parameter
    std::string                         org,	///< Request parameter
    struct ns1__get_USCOREgenes_USCOREby_USCOREkoResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREgenes_USCOREby_USCOREko_USCOREclass                         *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREgenes_USCOREby_USCOREko_USCOREclassResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREgenes_USCOREby_USCOREko_USCOREclass"
struct ns1__get_USCOREgenes_USCOREby_USCOREko_USCOREclassResponse
{
    ArrayOfDefinition*                  return_;
};

/// Operation "ns1__get_USCOREgenes_USCOREby_USCOREko_USCOREclass" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_genes_by_ko_class"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREgenes_USCOREby_USCOREko_USCOREclass(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         class_USCOREid,
    std::string                         org,
    int                                 start,
    int                                 max_USCOREresults,
    // response parameters:
    struct ns1__get_USCOREgenes_USCOREby_USCOREko_USCOREclassResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREgenes_USCOREby_USCOREko_USCOREclass rpc
//gsoap ns1  service method-encoding:	get_USCOREgenes_USCOREby_USCOREko_USCOREclass http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREgenes_USCOREby_USCOREko_USCOREclass SOAP/KEGG#get_genes_by_ko_class
int ns1__get_USCOREgenes_USCOREby_USCOREko_USCOREclass(
    std::string                         class_USCOREid,	///< Request parameter
    std::string                         org,	///< Request parameter
    int                                 start,	///< Request parameter
    int                                 max_USCOREresults,	///< Request parameter
    struct ns1__get_USCOREgenes_USCOREby_USCOREko_USCOREclassResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREoc_USCOREmembers_USCOREby_USCOREgene                        *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREoc_USCOREmembers_USCOREby_USCOREgeneResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREoc_USCOREmembers_USCOREby_USCOREgene"
struct ns1__get_USCOREoc_USCOREmembers_USCOREby_USCOREgeneResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREoc_USCOREmembers_USCOREby_USCOREgene" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_oc_members_by_gene"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREoc_USCOREmembers_USCOREby_USCOREgene(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         genes_USCOREid,
    int                                 start,
    int                                 max_USCOREresults,
    // response parameters:
    struct ns1__get_USCOREoc_USCOREmembers_USCOREby_USCOREgeneResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREoc_USCOREmembers_USCOREby_USCOREgene rpc
//gsoap ns1  service method-encoding:	get_USCOREoc_USCOREmembers_USCOREby_USCOREgene http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREoc_USCOREmembers_USCOREby_USCOREgene SOAP/KEGG#get_oc_members_by_gene
int ns1__get_USCOREoc_USCOREmembers_USCOREby_USCOREgene(
    std::string                         genes_USCOREid,	///< Request parameter
    int                                 start,	///< Request parameter
    int                                 max_USCOREresults,	///< Request parameter
    struct ns1__get_USCOREoc_USCOREmembers_USCOREby_USCOREgeneResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREpc_USCOREmembers_USCOREby_USCOREgene                        *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREpc_USCOREmembers_USCOREby_USCOREgeneResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREpc_USCOREmembers_USCOREby_USCOREgene"
struct ns1__get_USCOREpc_USCOREmembers_USCOREby_USCOREgeneResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREpc_USCOREmembers_USCOREby_USCOREgene" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_pc_members_by_gene"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREpc_USCOREmembers_USCOREby_USCOREgene(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         genes_USCOREid,
    int                                 start,
    int                                 max_USCOREresults,
    // response parameters:
    struct ns1__get_USCOREpc_USCOREmembers_USCOREby_USCOREgeneResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREpc_USCOREmembers_USCOREby_USCOREgene rpc
//gsoap ns1  service method-encoding:	get_USCOREpc_USCOREmembers_USCOREby_USCOREgene http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREpc_USCOREmembers_USCOREby_USCOREgene SOAP/KEGG#get_pc_members_by_gene
int ns1__get_USCOREpc_USCOREmembers_USCOREby_USCOREgene(
    std::string                         genes_USCOREid,	///< Request parameter
    int                                 start,	///< Request parameter
    int                                 max_USCOREresults,	///< Request parameter
    struct ns1__get_USCOREpc_USCOREmembers_USCOREby_USCOREgeneResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREelements_USCOREby_USCOREpathway                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREelements_USCOREby_USCOREpathwayResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREelements_USCOREby_USCOREpathway"
struct ns1__get_USCOREelements_USCOREby_USCOREpathwayResponse
{
    ArrayOfPathwayElement*              return_;
};

/// Operation "ns1__get_USCOREelements_USCOREby_USCOREpathway" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_elements_by_pathway"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREelements_USCOREby_USCOREpathway(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    // response parameters:
    struct ns1__get_USCOREelements_USCOREby_USCOREpathwayResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREelements_USCOREby_USCOREpathway rpc
//gsoap ns1  service method-encoding:	get_USCOREelements_USCOREby_USCOREpathway http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREelements_USCOREby_USCOREpathway SOAP/KEGG#get_elements_by_pathway
int ns1__get_USCOREelements_USCOREby_USCOREpathway(
    std::string                         pathway_USCOREid,	///< Request parameter
    struct ns1__get_USCOREelements_USCOREby_USCOREpathwayResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREelement_USCORErelations_USCOREby_USCOREpathway              *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREelement_USCORErelations_USCOREby_USCOREpathwayResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREelement_USCORErelations_USCOREby_USCOREpathway"
struct ns1__get_USCOREelement_USCORErelations_USCOREby_USCOREpathwayResponse
{
    ArrayOfPathwayElementRelation*      return_;
};

/// Operation "ns1__get_USCOREelement_USCORErelations_USCOREby_USCOREpathway" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_element_relations_by_pathway"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREelement_USCORErelations_USCOREby_USCOREpathway(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    // response parameters:
    struct ns1__get_USCOREelement_USCORErelations_USCOREby_USCOREpathwayResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREelement_USCORErelations_USCOREby_USCOREpathway rpc
//gsoap ns1  service method-encoding:	get_USCOREelement_USCORErelations_USCOREby_USCOREpathway http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREelement_USCORErelations_USCOREby_USCOREpathway SOAP/KEGG#get_element_relations_by_pathway
int ns1__get_USCOREelement_USCORErelations_USCOREby_USCOREpathway(
    std::string                         pathway_USCOREid,	///< Request parameter
    struct ns1__get_USCOREelement_USCORErelations_USCOREby_USCOREpathwayResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__color_USCOREpathway_USCOREby_USCOREelements                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__color_USCOREpathway_USCOREby_USCOREelements" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#color_pathway_by_elements"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__color_USCOREpathway_USCOREby_USCOREelements(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    ArrayOfint*                         element_USCORElist,
    ArrayOfstring*                      fg_USCOREcolor_USCORElist,
    ArrayOfstring*                      bg_USCOREcolor_USCORElist,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	color_USCOREpathway_USCOREby_USCOREelements rpc
//gsoap ns1  service method-encoding:	color_USCOREpathway_USCOREby_USCOREelements http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	color_USCOREpathway_USCOREby_USCOREelements SOAP/KEGG#color_pathway_by_elements
int ns1__color_USCOREpathway_USCOREby_USCOREelements(
    std::string                         pathway_USCOREid,	///< Request parameter
    ArrayOfint*                         element_USCORElist,	///< Request parameter
    ArrayOfstring*                      fg_USCOREcolor_USCORElist,	///< Request parameter
    ArrayOfstring*                      bg_USCOREcolor_USCORElist,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREelements*
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREelements" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_html_of_colored_pathway_by_elements"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREelements(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    ArrayOfint*                         element_USCORElist,
    ArrayOfstring*                      fg_USCOREcolor_USCORElist,
    ArrayOfstring*                      bg_USCOREcolor_USCORElist,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREelements rpc
//gsoap ns1  service method-encoding:	get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREelements http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREelements SOAP/KEGG#get_html_of_colored_pathway_by_elements
int ns1__get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREelements(
    std::string                         pathway_USCOREid,	///< Request parameter
    ArrayOfint*                         element_USCORElist,	///< Request parameter
    ArrayOfstring*                      fg_USCOREcolor_USCORElist,	///< Request parameter
    ArrayOfstring*                      bg_USCOREcolor_USCORElist,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__mark_USCOREpathway_USCOREby_USCOREobjects                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__mark_USCOREpathway_USCOREby_USCOREobjects" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#mark_pathway_by_objects"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__mark_USCOREpathway_USCOREby_USCOREobjects(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    ArrayOfstring*                      object_USCOREid_USCORElist,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	mark_USCOREpathway_USCOREby_USCOREobjects rpc
//gsoap ns1  service method-encoding:	mark_USCOREpathway_USCOREby_USCOREobjects http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	mark_USCOREpathway_USCOREby_USCOREobjects SOAP/KEGG#mark_pathway_by_objects
int ns1__mark_USCOREpathway_USCOREby_USCOREobjects(
    std::string                         pathway_USCOREid,	///< Request parameter
    ArrayOfstring*                      object_USCOREid_USCORElist,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__color_USCOREpathway_USCOREby_USCOREobjects                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__color_USCOREpathway_USCOREby_USCOREobjects" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#color_pathway_by_objects"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__color_USCOREpathway_USCOREby_USCOREobjects(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    ArrayOfstring*                      object_USCOREid_USCORElist,
    ArrayOfstring*                      fg_USCOREcolor_USCORElist,
    ArrayOfstring*                      bg_USCOREcolor_USCORElist,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	color_USCOREpathway_USCOREby_USCOREobjects rpc
//gsoap ns1  service method-encoding:	color_USCOREpathway_USCOREby_USCOREobjects http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	color_USCOREpathway_USCOREby_USCOREobjects SOAP/KEGG#color_pathway_by_objects
int ns1__color_USCOREpathway_USCOREby_USCOREobjects(
    std::string                         pathway_USCOREid,	///< Request parameter
    ArrayOfstring*                      object_USCOREid_USCORElist,	///< Request parameter
    ArrayOfstring*                      fg_USCOREcolor_USCORElist,	///< Request parameter
    ArrayOfstring*                      bg_USCOREcolor_USCORElist,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREhtml_USCOREof_USCOREmarked_USCOREpathway_USCOREby_USCOREobjects*
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__get_USCOREhtml_USCOREof_USCOREmarked_USCOREpathway_USCOREby_USCOREobjects" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_html_of_marked_pathway_by_objects"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREhtml_USCOREof_USCOREmarked_USCOREpathway_USCOREby_USCOREobjects(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    ArrayOfstring*                      object_USCOREid_USCORElist,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREhtml_USCOREof_USCOREmarked_USCOREpathway_USCOREby_USCOREobjects rpc
//gsoap ns1  service method-encoding:	get_USCOREhtml_USCOREof_USCOREmarked_USCOREpathway_USCOREby_USCOREobjects http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREhtml_USCOREof_USCOREmarked_USCOREpathway_USCOREby_USCOREobjects SOAP/KEGG#get_html_of_marked_pathway_by_objects
int ns1__get_USCOREhtml_USCOREof_USCOREmarked_USCOREpathway_USCOREby_USCOREobjects(
    std::string                         pathway_USCOREid,	///< Request parameter
    ArrayOfstring*                      object_USCOREid_USCORElist,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREobjects*
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREobjects" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_html_of_colored_pathway_by_objects"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREobjects(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    ArrayOfstring*                      object_USCOREid_USCORElist,
    ArrayOfstring*                      fg_USCOREcolor_USCORElist,
    ArrayOfstring*                      bg_USCOREcolor_USCORElist,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREobjects rpc
//gsoap ns1  service method-encoding:	get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREobjects http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREobjects SOAP/KEGG#get_html_of_colored_pathway_by_objects
int ns1__get_USCOREhtml_USCOREof_USCOREcolored_USCOREpathway_USCOREby_USCOREobjects(
    std::string                         pathway_USCOREid,	///< Request parameter
    ArrayOfstring*                      object_USCOREid_USCORElist,	///< Request parameter
    ArrayOfstring*                      fg_USCOREcolor_USCORElist,	///< Request parameter
    ArrayOfstring*                      bg_USCOREcolor_USCORElist,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREgenes_USCOREby_USCOREpathway                                *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREgenes_USCOREby_USCOREpathwayResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREgenes_USCOREby_USCOREpathway"
struct ns1__get_USCOREgenes_USCOREby_USCOREpathwayResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREgenes_USCOREby_USCOREpathway" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_genes_by_pathway"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREgenes_USCOREby_USCOREpathway(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    // response parameters:
    struct ns1__get_USCOREgenes_USCOREby_USCOREpathwayResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREgenes_USCOREby_USCOREpathway rpc
//gsoap ns1  service method-encoding:	get_USCOREgenes_USCOREby_USCOREpathway http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREgenes_USCOREby_USCOREpathway SOAP/KEGG#get_genes_by_pathway
int ns1__get_USCOREgenes_USCOREby_USCOREpathway(
    std::string                         pathway_USCOREid,	///< Request parameter
    struct ns1__get_USCOREgenes_USCOREby_USCOREpathwayResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREenzymes_USCOREby_USCOREpathway                              *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREenzymes_USCOREby_USCOREpathwayResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREenzymes_USCOREby_USCOREpathway"
struct ns1__get_USCOREenzymes_USCOREby_USCOREpathwayResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREenzymes_USCOREby_USCOREpathway" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_enzymes_by_pathway"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREenzymes_USCOREby_USCOREpathway(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    // response parameters:
    struct ns1__get_USCOREenzymes_USCOREby_USCOREpathwayResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREenzymes_USCOREby_USCOREpathway rpc
//gsoap ns1  service method-encoding:	get_USCOREenzymes_USCOREby_USCOREpathway http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREenzymes_USCOREby_USCOREpathway SOAP/KEGG#get_enzymes_by_pathway
int ns1__get_USCOREenzymes_USCOREby_USCOREpathway(
    std::string                         pathway_USCOREid,	///< Request parameter
    struct ns1__get_USCOREenzymes_USCOREby_USCOREpathwayResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREreactions_USCOREby_USCOREpathway                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREreactions_USCOREby_USCOREpathwayResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREreactions_USCOREby_USCOREpathway"
struct ns1__get_USCOREreactions_USCOREby_USCOREpathwayResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREreactions_USCOREby_USCOREpathway" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_reactions_by_pathway"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREreactions_USCOREby_USCOREpathway(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    // response parameters:
    struct ns1__get_USCOREreactions_USCOREby_USCOREpathwayResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREreactions_USCOREby_USCOREpathway rpc
//gsoap ns1  service method-encoding:	get_USCOREreactions_USCOREby_USCOREpathway http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREreactions_USCOREby_USCOREpathway SOAP/KEGG#get_reactions_by_pathway
int ns1__get_USCOREreactions_USCOREby_USCOREpathway(
    std::string                         pathway_USCOREid,	///< Request parameter
    struct ns1__get_USCOREreactions_USCOREby_USCOREpathwayResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREpathways_USCOREby_USCOREgenes                               *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREpathways_USCOREby_USCOREgenesResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREpathways_USCOREby_USCOREgenes"
struct ns1__get_USCOREpathways_USCOREby_USCOREgenesResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREpathways_USCOREby_USCOREgenes" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_pathways_by_genes"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREpathways_USCOREby_USCOREgenes(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ArrayOfstring*                      genes_USCOREid_USCORElist,
    // response parameters:
    struct ns1__get_USCOREpathways_USCOREby_USCOREgenesResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREpathways_USCOREby_USCOREgenes rpc
//gsoap ns1  service method-encoding:	get_USCOREpathways_USCOREby_USCOREgenes http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREpathways_USCOREby_USCOREgenes SOAP/KEGG#get_pathways_by_genes
int ns1__get_USCOREpathways_USCOREby_USCOREgenes(
    ArrayOfstring*                      genes_USCOREid_USCORElist,	///< Request parameter
    struct ns1__get_USCOREpathways_USCOREby_USCOREgenesResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREpathways_USCOREby_USCOREenzymes                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREpathways_USCOREby_USCOREenzymesResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREpathways_USCOREby_USCOREenzymes"
struct ns1__get_USCOREpathways_USCOREby_USCOREenzymesResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREpathways_USCOREby_USCOREenzymes" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_pathways_by_enzymes"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREpathways_USCOREby_USCOREenzymes(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ArrayOfstring*                      enzyme_USCOREid_USCORElist,
    // response parameters:
    struct ns1__get_USCOREpathways_USCOREby_USCOREenzymesResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREpathways_USCOREby_USCOREenzymes rpc
//gsoap ns1  service method-encoding:	get_USCOREpathways_USCOREby_USCOREenzymes http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREpathways_USCOREby_USCOREenzymes SOAP/KEGG#get_pathways_by_enzymes
int ns1__get_USCOREpathways_USCOREby_USCOREenzymes(
    ArrayOfstring*                      enzyme_USCOREid_USCORElist,	///< Request parameter
    struct ns1__get_USCOREpathways_USCOREby_USCOREenzymesResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREpathways_USCOREby_USCOREreactions                           *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREpathways_USCOREby_USCOREreactionsResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREpathways_USCOREby_USCOREreactions"
struct ns1__get_USCOREpathways_USCOREby_USCOREreactionsResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREpathways_USCOREby_USCOREreactions" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_pathways_by_reactions"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREpathways_USCOREby_USCOREreactions(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ArrayOfstring*                      reaction_USCOREid_USCORElist,
    // response parameters:
    struct ns1__get_USCOREpathways_USCOREby_USCOREreactionsResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREpathways_USCOREby_USCOREreactions rpc
//gsoap ns1  service method-encoding:	get_USCOREpathways_USCOREby_USCOREreactions http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREpathways_USCOREby_USCOREreactions SOAP/KEGG#get_pathways_by_reactions
int ns1__get_USCOREpathways_USCOREby_USCOREreactions(
    ArrayOfstring*                      reaction_USCOREid_USCORElist,	///< Request parameter
    struct ns1__get_USCOREpathways_USCOREby_USCOREreactionsResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCORElinked_USCOREpathways                                       *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCORElinked_USCOREpathwaysResponse" of service binding "KEGGBinding" operation "ns1__get_USCORElinked_USCOREpathways"
struct ns1__get_USCORElinked_USCOREpathwaysResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCORElinked_USCOREpathways" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_linked_pathways"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCORElinked_USCOREpathways(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    // response parameters:
    struct ns1__get_USCORElinked_USCOREpathwaysResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCORElinked_USCOREpathways rpc
//gsoap ns1  service method-encoding:	get_USCORElinked_USCOREpathways http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCORElinked_USCOREpathways SOAP/KEGG#get_linked_pathways
int ns1__get_USCORElinked_USCOREpathways(
    std::string                         pathway_USCOREid,	///< Request parameter
    struct ns1__get_USCORElinked_USCOREpathwaysResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREgenes_USCOREby_USCOREenzyme                                 *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREgenes_USCOREby_USCOREenzymeResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREgenes_USCOREby_USCOREenzyme"
struct ns1__get_USCOREgenes_USCOREby_USCOREenzymeResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREgenes_USCOREby_USCOREenzyme" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_genes_by_enzyme"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREgenes_USCOREby_USCOREenzyme(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         enzyme_USCOREid,
    std::string                         org,
    // response parameters:
    struct ns1__get_USCOREgenes_USCOREby_USCOREenzymeResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREgenes_USCOREby_USCOREenzyme rpc
//gsoap ns1  service method-encoding:	get_USCOREgenes_USCOREby_USCOREenzyme http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREgenes_USCOREby_USCOREenzyme SOAP/KEGG#get_genes_by_enzyme
int ns1__get_USCOREgenes_USCOREby_USCOREenzyme(
    std::string                         enzyme_USCOREid,	///< Request parameter
    std::string                         org,	///< Request parameter
    struct ns1__get_USCOREgenes_USCOREby_USCOREenzymeResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREenzymes_USCOREby_USCOREgene                                 *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREenzymes_USCOREby_USCOREgeneResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREenzymes_USCOREby_USCOREgene"
struct ns1__get_USCOREenzymes_USCOREby_USCOREgeneResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREenzymes_USCOREby_USCOREgene" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_enzymes_by_gene"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREenzymes_USCOREby_USCOREgene(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         genes_USCOREid,
    // response parameters:
    struct ns1__get_USCOREenzymes_USCOREby_USCOREgeneResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREenzymes_USCOREby_USCOREgene rpc
//gsoap ns1  service method-encoding:	get_USCOREenzymes_USCOREby_USCOREgene http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREenzymes_USCOREby_USCOREgene SOAP/KEGG#get_enzymes_by_gene
int ns1__get_USCOREenzymes_USCOREby_USCOREgene(
    std::string                         genes_USCOREid,	///< Request parameter
    struct ns1__get_USCOREenzymes_USCOREby_USCOREgeneResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREenzymes_USCOREby_USCOREreaction                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREenzymes_USCOREby_USCOREreactionResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREenzymes_USCOREby_USCOREreaction"
struct ns1__get_USCOREenzymes_USCOREby_USCOREreactionResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREenzymes_USCOREby_USCOREreaction" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_enzymes_by_reaction"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREenzymes_USCOREby_USCOREreaction(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         reaction_USCOREid,
    // response parameters:
    struct ns1__get_USCOREenzymes_USCOREby_USCOREreactionResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREenzymes_USCOREby_USCOREreaction rpc
//gsoap ns1  service method-encoding:	get_USCOREenzymes_USCOREby_USCOREreaction http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREenzymes_USCOREby_USCOREreaction SOAP/KEGG#get_enzymes_by_reaction
int ns1__get_USCOREenzymes_USCOREby_USCOREreaction(
    std::string                         reaction_USCOREid,	///< Request parameter
    struct ns1__get_USCOREenzymes_USCOREby_USCOREreactionResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREreactions_USCOREby_USCOREenzyme                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREreactions_USCOREby_USCOREenzymeResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREreactions_USCOREby_USCOREenzyme"
struct ns1__get_USCOREreactions_USCOREby_USCOREenzymeResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREreactions_USCOREby_USCOREenzyme" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_reactions_by_enzyme"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREreactions_USCOREby_USCOREenzyme(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         enzyme_USCOREid,
    // response parameters:
    struct ns1__get_USCOREreactions_USCOREby_USCOREenzymeResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREreactions_USCOREby_USCOREenzyme rpc
//gsoap ns1  service method-encoding:	get_USCOREreactions_USCOREby_USCOREenzyme http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREreactions_USCOREby_USCOREenzyme SOAP/KEGG#get_reactions_by_enzyme
int ns1__get_USCOREreactions_USCOREby_USCOREenzyme(
    std::string                         enzyme_USCOREid,	///< Request parameter
    struct ns1__get_USCOREreactions_USCOREby_USCOREenzymeResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREgenes_USCOREby_USCOREorganism                               *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREgenes_USCOREby_USCOREorganismResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREgenes_USCOREby_USCOREorganism"
struct ns1__get_USCOREgenes_USCOREby_USCOREorganismResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREgenes_USCOREby_USCOREorganism" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_genes_by_organism"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREgenes_USCOREby_USCOREorganism(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         org,
    int                                 start,
    int                                 max_USCOREresults,
    // response parameters:
    struct ns1__get_USCOREgenes_USCOREby_USCOREorganismResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREgenes_USCOREby_USCOREorganism rpc
//gsoap ns1  service method-encoding:	get_USCOREgenes_USCOREby_USCOREorganism http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREgenes_USCOREby_USCOREorganism SOAP/KEGG#get_genes_by_organism
int ns1__get_USCOREgenes_USCOREby_USCOREorganism(
    std::string                         org,	///< Request parameter
    int                                 start,	///< Request parameter
    int                                 max_USCOREresults,	///< Request parameter
    struct ns1__get_USCOREgenes_USCOREby_USCOREorganismResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREnumber_USCOREof_USCOREgenes_USCOREby_USCOREorganism         *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__get_USCOREnumber_USCOREof_USCOREgenes_USCOREby_USCOREorganism" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_number_of_genes_by_organism"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREnumber_USCOREof_USCOREgenes_USCOREby_USCOREorganism(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         abbr,
    // response parameters:
    int                                &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREnumber_USCOREof_USCOREgenes_USCOREby_USCOREorganism rpc
//gsoap ns1  service method-encoding:	get_USCOREnumber_USCOREof_USCOREgenes_USCOREby_USCOREorganism http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREnumber_USCOREof_USCOREgenes_USCOREby_USCOREorganism SOAP/KEGG#get_number_of_genes_by_organism
int ns1__get_USCOREnumber_USCOREof_USCOREgenes_USCOREby_USCOREorganism(
    std::string                         abbr,	///< Request parameter
    int                                &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREreactions_USCOREby_USCOREglycan                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREreactions_USCOREby_USCOREglycanResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREreactions_USCOREby_USCOREglycan"
struct ns1__get_USCOREreactions_USCOREby_USCOREglycanResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREreactions_USCOREby_USCOREglycan" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_reactions_by_glycan"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREreactions_USCOREby_USCOREglycan(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         glycan_USCOREid,
    // response parameters:
    struct ns1__get_USCOREreactions_USCOREby_USCOREglycanResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREreactions_USCOREby_USCOREglycan rpc
//gsoap ns1  service method-encoding:	get_USCOREreactions_USCOREby_USCOREglycan http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREreactions_USCOREby_USCOREglycan SOAP/KEGG#get_reactions_by_glycan
int ns1__get_USCOREreactions_USCOREby_USCOREglycan(
    std::string                         glycan_USCOREid,	///< Request parameter
    struct ns1__get_USCOREreactions_USCOREby_USCOREglycanResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREreactions_USCOREby_USCOREcompound                           *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREreactions_USCOREby_USCOREcompoundResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREreactions_USCOREby_USCOREcompound"
struct ns1__get_USCOREreactions_USCOREby_USCOREcompoundResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREreactions_USCOREby_USCOREcompound" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_reactions_by_compound"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREreactions_USCOREby_USCOREcompound(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         compound_USCOREid,
    // response parameters:
    struct ns1__get_USCOREreactions_USCOREby_USCOREcompoundResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREreactions_USCOREby_USCOREcompound rpc
//gsoap ns1  service method-encoding:	get_USCOREreactions_USCOREby_USCOREcompound http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREreactions_USCOREby_USCOREcompound SOAP/KEGG#get_reactions_by_compound
int ns1__get_USCOREreactions_USCOREby_USCOREcompound(
    std::string                         compound_USCOREid,	///< Request parameter
    struct ns1__get_USCOREreactions_USCOREby_USCOREcompoundResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREenzymes_USCOREby_USCOREglycan                               *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREenzymes_USCOREby_USCOREglycanResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREenzymes_USCOREby_USCOREglycan"
struct ns1__get_USCOREenzymes_USCOREby_USCOREglycanResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREenzymes_USCOREby_USCOREglycan" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_enzymes_by_glycan"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREenzymes_USCOREby_USCOREglycan(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         glycan_USCOREid,
    // response parameters:
    struct ns1__get_USCOREenzymes_USCOREby_USCOREglycanResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREenzymes_USCOREby_USCOREglycan rpc
//gsoap ns1  service method-encoding:	get_USCOREenzymes_USCOREby_USCOREglycan http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREenzymes_USCOREby_USCOREglycan SOAP/KEGG#get_enzymes_by_glycan
int ns1__get_USCOREenzymes_USCOREby_USCOREglycan(
    std::string                         glycan_USCOREid,	///< Request parameter
    struct ns1__get_USCOREenzymes_USCOREby_USCOREglycanResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREenzymes_USCOREby_USCOREcompound                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREenzymes_USCOREby_USCOREcompoundResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREenzymes_USCOREby_USCOREcompound"
struct ns1__get_USCOREenzymes_USCOREby_USCOREcompoundResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREenzymes_USCOREby_USCOREcompound" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_enzymes_by_compound"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREenzymes_USCOREby_USCOREcompound(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         compound_USCOREid,
    // response parameters:
    struct ns1__get_USCOREenzymes_USCOREby_USCOREcompoundResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREenzymes_USCOREby_USCOREcompound rpc
//gsoap ns1  service method-encoding:	get_USCOREenzymes_USCOREby_USCOREcompound http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREenzymes_USCOREby_USCOREcompound SOAP/KEGG#get_enzymes_by_compound
int ns1__get_USCOREenzymes_USCOREby_USCOREcompound(
    std::string                         compound_USCOREid,	///< Request parameter
    struct ns1__get_USCOREenzymes_USCOREby_USCOREcompoundResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREpathways_USCOREby_USCOREcompounds                           *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREpathways_USCOREby_USCOREcompoundsResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREpathways_USCOREby_USCOREcompounds"
struct ns1__get_USCOREpathways_USCOREby_USCOREcompoundsResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREpathways_USCOREby_USCOREcompounds" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_pathways_by_compounds"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREpathways_USCOREby_USCOREcompounds(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ArrayOfstring*                      compound_USCOREid_USCORElist,
    // response parameters:
    struct ns1__get_USCOREpathways_USCOREby_USCOREcompoundsResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREpathways_USCOREby_USCOREcompounds rpc
//gsoap ns1  service method-encoding:	get_USCOREpathways_USCOREby_USCOREcompounds http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREpathways_USCOREby_USCOREcompounds SOAP/KEGG#get_pathways_by_compounds
int ns1__get_USCOREpathways_USCOREby_USCOREcompounds(
    ArrayOfstring*                      compound_USCOREid_USCORElist,	///< Request parameter
    struct ns1__get_USCOREpathways_USCOREby_USCOREcompoundsResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREpathways_USCOREby_USCOREglycans                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREpathways_USCOREby_USCOREglycansResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREpathways_USCOREby_USCOREglycans"
struct ns1__get_USCOREpathways_USCOREby_USCOREglycansResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREpathways_USCOREby_USCOREglycans" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_pathways_by_glycans"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREpathways_USCOREby_USCOREglycans(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ArrayOfstring*                      glycan_USCOREid_USCORElist,
    // response parameters:
    struct ns1__get_USCOREpathways_USCOREby_USCOREglycansResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREpathways_USCOREby_USCOREglycans rpc
//gsoap ns1  service method-encoding:	get_USCOREpathways_USCOREby_USCOREglycans http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREpathways_USCOREby_USCOREglycans SOAP/KEGG#get_pathways_by_glycans
int ns1__get_USCOREpathways_USCOREby_USCOREglycans(
    ArrayOfstring*                      glycan_USCOREid_USCORElist,	///< Request parameter
    struct ns1__get_USCOREpathways_USCOREby_USCOREglycansResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREcompounds_USCOREby_USCOREpathway                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREcompounds_USCOREby_USCOREpathwayResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREcompounds_USCOREby_USCOREpathway"
struct ns1__get_USCOREcompounds_USCOREby_USCOREpathwayResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREcompounds_USCOREby_USCOREpathway" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_compounds_by_pathway"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREcompounds_USCOREby_USCOREpathway(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    // response parameters:
    struct ns1__get_USCOREcompounds_USCOREby_USCOREpathwayResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREcompounds_USCOREby_USCOREpathway rpc
//gsoap ns1  service method-encoding:	get_USCOREcompounds_USCOREby_USCOREpathway http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREcompounds_USCOREby_USCOREpathway SOAP/KEGG#get_compounds_by_pathway
int ns1__get_USCOREcompounds_USCOREby_USCOREpathway(
    std::string                         pathway_USCOREid,	///< Request parameter
    struct ns1__get_USCOREcompounds_USCOREby_USCOREpathwayResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREglycans_USCOREby_USCOREpathway                              *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREglycans_USCOREby_USCOREpathwayResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREglycans_USCOREby_USCOREpathway"
struct ns1__get_USCOREglycans_USCOREby_USCOREpathwayResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREglycans_USCOREby_USCOREpathway" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_glycans_by_pathway"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREglycans_USCOREby_USCOREpathway(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    // response parameters:
    struct ns1__get_USCOREglycans_USCOREby_USCOREpathwayResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREglycans_USCOREby_USCOREpathway rpc
//gsoap ns1  service method-encoding:	get_USCOREglycans_USCOREby_USCOREpathway http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREglycans_USCOREby_USCOREpathway SOAP/KEGG#get_glycans_by_pathway
int ns1__get_USCOREglycans_USCOREby_USCOREpathway(
    std::string                         pathway_USCOREid,	///< Request parameter
    struct ns1__get_USCOREglycans_USCOREby_USCOREpathwayResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREcompounds_USCOREby_USCOREreaction                           *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREcompounds_USCOREby_USCOREreactionResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREcompounds_USCOREby_USCOREreaction"
struct ns1__get_USCOREcompounds_USCOREby_USCOREreactionResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREcompounds_USCOREby_USCOREreaction" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_compounds_by_reaction"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREcompounds_USCOREby_USCOREreaction(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         reaction_USCOREid,
    // response parameters:
    struct ns1__get_USCOREcompounds_USCOREby_USCOREreactionResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREcompounds_USCOREby_USCOREreaction rpc
//gsoap ns1  service method-encoding:	get_USCOREcompounds_USCOREby_USCOREreaction http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREcompounds_USCOREby_USCOREreaction SOAP/KEGG#get_compounds_by_reaction
int ns1__get_USCOREcompounds_USCOREby_USCOREreaction(
    std::string                         reaction_USCOREid,	///< Request parameter
    struct ns1__get_USCOREcompounds_USCOREby_USCOREreactionResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREglycans_USCOREby_USCOREreaction                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREglycans_USCOREby_USCOREreactionResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREglycans_USCOREby_USCOREreaction"
struct ns1__get_USCOREglycans_USCOREby_USCOREreactionResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREglycans_USCOREby_USCOREreaction" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_glycans_by_reaction"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREglycans_USCOREby_USCOREreaction(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         reaction_USCOREid,
    // response parameters:
    struct ns1__get_USCOREglycans_USCOREby_USCOREreactionResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREglycans_USCOREby_USCOREreaction rpc
//gsoap ns1  service method-encoding:	get_USCOREglycans_USCOREby_USCOREreaction http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREglycans_USCOREby_USCOREreaction SOAP/KEGG#get_glycans_by_reaction
int ns1__get_USCOREglycans_USCOREby_USCOREreaction(
    std::string                         reaction_USCOREid,	///< Request parameter
    struct ns1__get_USCOREglycans_USCOREby_USCOREreactionResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREcompounds_USCOREby_USCOREenzyme                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREcompounds_USCOREby_USCOREenzymeResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREcompounds_USCOREby_USCOREenzyme"
struct ns1__get_USCOREcompounds_USCOREby_USCOREenzymeResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREcompounds_USCOREby_USCOREenzyme" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_compounds_by_enzyme"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREcompounds_USCOREby_USCOREenzyme(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         enzyme_USCOREid,
    // response parameters:
    struct ns1__get_USCOREcompounds_USCOREby_USCOREenzymeResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREcompounds_USCOREby_USCOREenzyme rpc
//gsoap ns1  service method-encoding:	get_USCOREcompounds_USCOREby_USCOREenzyme http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREcompounds_USCOREby_USCOREenzyme SOAP/KEGG#get_compounds_by_enzyme
int ns1__get_USCOREcompounds_USCOREby_USCOREenzyme(
    std::string                         enzyme_USCOREid,	///< Request parameter
    struct ns1__get_USCOREcompounds_USCOREby_USCOREenzymeResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREglycans_USCOREby_USCOREenzyme                               *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREglycans_USCOREby_USCOREenzymeResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREglycans_USCOREby_USCOREenzyme"
struct ns1__get_USCOREglycans_USCOREby_USCOREenzymeResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREglycans_USCOREby_USCOREenzyme" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_glycans_by_enzyme"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREglycans_USCOREby_USCOREenzyme(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         enzyme_USCOREid,
    // response parameters:
    struct ns1__get_USCOREglycans_USCOREby_USCOREenzymeResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREglycans_USCOREby_USCOREenzyme rpc
//gsoap ns1  service method-encoding:	get_USCOREglycans_USCOREby_USCOREenzyme http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREglycans_USCOREby_USCOREenzyme SOAP/KEGG#get_glycans_by_enzyme
int ns1__get_USCOREglycans_USCOREby_USCOREenzyme(
    std::string                         enzyme_USCOREid,	///< Request parameter
    struct ns1__get_USCOREglycans_USCOREby_USCOREenzymeResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__convert_USCOREmol_USCOREto_USCOREkcf                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__convert_USCOREmol_USCOREto_USCOREkcf" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#convert_mol_to_kcf"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__convert_USCOREmol_USCOREto_USCOREkcf(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         mol_USCOREtext,
    // response parameters:
    std::string                        &return_
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	convert_USCOREmol_USCOREto_USCOREkcf rpc
//gsoap ns1  service method-encoding:	convert_USCOREmol_USCOREto_USCOREkcf http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	convert_USCOREmol_USCOREto_USCOREkcf SOAP/KEGG#convert_mol_to_kcf
int ns1__convert_USCOREmol_USCOREto_USCOREkcf(
    std::string                         mol_USCOREtext,	///< Request parameter
    std::string                        &return_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREkos_USCOREby_USCOREpathway                                  *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREkos_USCOREby_USCOREpathwayResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREkos_USCOREby_USCOREpathway"
struct ns1__get_USCOREkos_USCOREby_USCOREpathwayResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREkos_USCOREby_USCOREpathway" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_kos_by_pathway"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREkos_USCOREby_USCOREpathway(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         pathway_USCOREid,
    // response parameters:
    struct ns1__get_USCOREkos_USCOREby_USCOREpathwayResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREkos_USCOREby_USCOREpathway rpc
//gsoap ns1  service method-encoding:	get_USCOREkos_USCOREby_USCOREpathway http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREkos_USCOREby_USCOREpathway SOAP/KEGG#get_kos_by_pathway
int ns1__get_USCOREkos_USCOREby_USCOREpathway(
    std::string                         pathway_USCOREid,	///< Request parameter
    struct ns1__get_USCOREkos_USCOREby_USCOREpathwayResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__get_USCOREpathways_USCOREby_USCOREkos                                 *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__get_USCOREpathways_USCOREby_USCOREkosResponse" of service binding "KEGGBinding" operation "ns1__get_USCOREpathways_USCOREby_USCOREkos"
struct ns1__get_USCOREpathways_USCOREby_USCOREkosResponse
{
    ArrayOfstring*                      return_;
};

/// Operation "ns1__get_USCOREpathways_USCOREby_USCOREkos" of service binding "KEGGBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="SOAP/KEGG#get_pathways_by_kos"

C stub function (defined in soapClient.c[pp] after running soapcpp2):
@code
  int soap_call_ns1__get_USCOREpathways_USCOREby_USCOREkos(struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ArrayOfstring*                      ko_USCOREid_USCORElist,
    std::string                         org,
    // response parameters:
    struct ns1__get_USCOREpathways_USCOREby_USCOREkosResponse&
  );
@endcode

C++ proxy class (defined in soapKEGGBindingProxy.h):
  class KEGGBinding;

*/

//gsoap ns1  service method-style:	get_USCOREpathways_USCOREby_USCOREkos rpc
//gsoap ns1  service method-encoding:	get_USCOREpathways_USCOREby_USCOREkos http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	get_USCOREpathways_USCOREby_USCOREkos SOAP/KEGG#get_pathways_by_kos
int ns1__get_USCOREpathways_USCOREby_USCOREkos(
    ArrayOfstring*                      ko_USCOREid_USCORElist,	///< Request parameter
    std::string                         org,	///< Request parameter
    struct ns1__get_USCOREpathways_USCOREby_USCOREkosResponse&	///< Response struct parameter
);

/* End of Generated/kegg_wsdl.h */
